@startuml eer
!define pk(x) <b>x</b>
!define fk(x) <u>x</u>

entity Schema {
    pk(id) : UUID
    
    fk(parent) : [UUID]

    name : STRING
    info : STRING
}

entity Field {
    pk(id) : UUID
    
    fk(schema_id) : UUID
    
    name : STRING
    datatype : STRING
    constant : BOOLEAN
}

entity Dataset {
    pk(id) : UUID
    
    fk(batch_id) : UUID
    
    name : STRING
    batch_id : UUID
    size : INTEGER
}

entity Batch {
    pk(id) : UUID
    
    fk(schema_id) : UUID
    
    name : STRING
    created : TIMESTAMP
}

entity Collection {
    pk(id) : UUID
    
    name : STRING
    query_string : STRING
}

entity TagKey {
    pk(id) : UUID
    
    name : STRING
}

entity Tag {
    pk(id) : UUID

    fk(tag_key_id) : UUID

    name : STRING
}

entity ConstValue {
    pk(id) : UUID

    fk(field_id) : UUID
    fk(dataset_id) : UUID

    value : JSON
}

entity ColValue {
    pk(id) : UUID
    ' ID is also the file name that holds the column data

    fk(field_id) : UUID
    fk(dataset_id) : UUID
}

Dataset }|--|| Batch : groups
Batch }|--|| Schema : formats
Schema ||--|{ Field : contains
Schema |o--|{ Schema : is subschema of
TagKey ||--|{ Tag : assigns
Tag }|--|{ Batch : catogorises
ConstValue }o--|| Field : assigns
ColValue }|--|| Field : assigns
ConstValue }|--|| Dataset : has
ColValue }o--|| Dataset : has
@enduml
